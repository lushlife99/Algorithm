import sys

tetro_list = [
    [(0,0), (1,0), (0,1), (1,1)], # 정사각형

    [(0,0), (0,1), (0,2), (0,3)], # 1자
    [(0,0), (1,0), (2,0), (3,0)], # - 자

    [[0,0], (0,1), (1,0), (2,0)], # L자
    [(0,0), (1,0), (1,1), (1,2)], # L자 오른쪽 90도
    [(0,1), (2,0), (2,1), (1,1)], # L자 180도
    [(0,0), (0,1), (0,2), (1,2)], # L자 270도

    [(0,0), (0,1), (1,1), (2,1)], # L자 대칭
    [(0,0), (0,1), (0,2), (1,0)], # L자 대칭 오른쪽 90도
    [(0,0), (1,0), (2,0), (2,1)], # L자 대칭 180도
    [(1,0), (1,1), (1,2), (0,2)], # L자 대칭 270도

    [(0,1), (1,0), (1,1), (2,0)], # 4번째 도형
    [(0,0), (0,1), (1,1), (1,2)], # 90도

    [(0,0), (1,0), (1,1), (2,1)], # 4번째 대칭
    [(0,1), (0,2), (1,0), (1,1)], # 90도

    [(0,0), (0,1), (0,2), (1,1)], # ㅗ 모양
    [(0,0), (1,0), (1,1), (2,0)], # ㅗ 90도
    [(0,1), (1,0), (1,1), (1,2)], # ㅗ 180도
    [(0,1), (1,0), (1,1), (2,1)]# 270도
]

N, M = map(int, input().split())
arr = [list(map(int, sys.stdin.readline().split())) for _ in range(N)]
res = 0

for i in range(N):
    for j in range(M):
        for tetro in tetro_list:
            sum_ = 0
            sig = True
            for dx, dy in tetro:
                if 0 <= i + dx < N and 0 <= j + dy < M:
                    sum_ += arr[i+dx][j+dy]

                else :
                    sig = False
                    break

            if sig:
                res = max(res, sum_)

print(res)